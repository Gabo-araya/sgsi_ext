x-base-dev: &base-dev-app
  restart: "no"
  network_mode: host

x-base-build-args: &base-build-args
  HOST_UID: "${HOST_UID:-2640}"
  HOST_GID: "${HOST_GID:-2640}"
  WHO: "${WHO:-magnet}"

x-django-app: &base-django-app
  build:
    context: .
    target: development
    args:
      <<: *base-build-args
  env_file: .env
  environment:
    - PATH=${DEV_PATH}
    - VIRTUAL_ENV=${DEV_VIRTUAL_ENV}

services:
  django:
    <<: [*base-django-app, *base-dev-app]
    # Note that the path of the Dockerfile and context is relative to the *primary*
    # docker-compose.yml file (the first in the devcontainer.json "dockerComposeFile"
    # array).
    volumes:
      - ./:/usr/src/app/

      # Uncomment the next line to use Docker from inside the container.
      # See https://aka.ms/vscode-remote/samples/docker-from-docker-compose for details.
      # - /var/run/docker.sock:/var/run/docker.sock

      # Custom config shared between devcontainers:
      - ~/.config/magnet-django-devcontainer/zshcustom/:/home/${WHO}/.oh-my-zsh/custom/shared/
      - ~/.config/magnet-django-devcontainer/.ipython/:/home/${WHO}/.ipython/

    # Uncomment the next four lines if you will use a ptrace-based debugger like C++, Go, and Rust.
    # cap_add:
    #   - SYS_PTRACE
    # security_opt:
    #   - seccomp:unconfined


  postgres:
    <<: *base-dev-app

  # redis:
  #   <<: *base-dev-app
  #   image: redis:5-alpine
  #   volumes:
  #     - ./docker/volumes/redis-data/:/data/

  # celery:
  #   <<: [*base-django-app, *base-dev-app]
  #   depends_on:
  #     - redis
  #   volumes:
  #     - ./:/usr/src/app/
  #   command:
  #     - celery
  #     - --app=project.celeryconf:app
  #     - worker
  #     - --loglevel=info
  #     - --beat
