services:
  django:
    # Note that the path of the Dockerfile and context is relative to the *primary*
    # docker-compose.yml file (the first in the devcontainer.json "dockerComposeFile"
    # array).
    build:
      context: .
      target: development

    restart: "no"

    volumes:
      # Update this to wherever you want to mount the folder of your project
      - ./:/usr/src/app/

      # Uncomment the next line to use Docker from inside the container.
      # See https://aka.ms/vscode-remote/samples/docker-from-docker-compose for details.
      # - /var/run/docker.sock:/var/run/docker.sock

      # Custom config shared between devcontainers:
      - ~/.config/magnet-django-devcontainer/zshcustom/:/home/${WHO}/.oh-my-zsh/custom/shared/
      - ~/.config/magnet-django-devcontainer/.ipython/:/home/${WHO}/.ipython/

    # Uncomment the next four lines if you will use a ptrace-based debugger like C++, Go, and Rust.
    # cap_add:
    #   - SYS_PTRACE
    # security_opt:
    #   - seccomp:unconfined

    # Easily connect to internal services without having to inspect the container for its IP or forward ports:
    network_mode: host

  postgres:
    restart: "no"
    network_mode: host

  # redis:
  #   image: redis:5-alpine
  #   restart: no
  #   network_mode: host
  #   volumes:
  #     - ./docker/volumes/redis-data/:/data/

  # celery:
  #   build:
  #     context: .
  #     target: development
  #   restart: no
  #   env_file: .env
  #   environment:
  #     - PATH=${DEV_PATH}
  #     - VIRTUAL_ENV=${DEV_VIRTUAL_ENV}
  #   network_mode: host
  #   volumes:
  #     - ./project/media/:/usr/src/app/project/media/
  #     - ./:/usr/src/app/
  #   depends_on:
  #     - redis
  #   command:
  #     - celery
  #     - --app=project.celeryconf:app
  #     - worker
  #     - --loglevel=info
  #     - --beat
