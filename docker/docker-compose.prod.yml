services:
  django:
    healthcheck:
      test: ["CMD-SHELL", "wait-for-it localhost:8000 --timeout=5"]
      interval: 10s
      timeout: 6s
      start_period: 30s
    depends_on:
      - redis
    volumes:
      - ./project/static/:/usr/src/app/project/static/
      - ./project/media/:/usr/src/app/project/media/
      # Keep histories:
      - ./docker/volumes/.zsh_history/:/home/${WHO}/.zsh_history/
      - ./docker/volumes/.ipython/:/home/${WHO}/.ipython/

  nginx:
    build:
      context: ./docker/nginx/
    env_file: docker/nginx.env
    ports:
      - 80:80
      - 443:443
    depends_on:
      - django  # To prevent '[emerg] host not found in upstream "django"'
    restart: unless-stopped
    volumes:
      - ./project/static/:/usr/share/nginx/static/:ro
      - ./project/media/:/usr/share/nginx/media/:ro
      - ./docker/volumes/nginx_secrets/:/etc/letsencrypt/

  redis:
    image: redis:5-alpine
    restart: unless-stopped
    volumes:
      - ./docker/volumes/redis-data/:/data/

  celery:
    build:
      context: .
      target: production
      args:
        HOST_UID: "${HOST_UID:-2640}"
        HOST_GID: "${HOST_GID:-2640}"
        WHO: "${WHO:-magnet}"
    restart: unless-stopped
    env_file: .env
    volumes:
      - ./project/media/:/usr/src/app/project/media/
      - ./project/static/:/usr/src/app/project/static/:ro
    depends_on:
      - redis
    command:
      - celery
      - --app=project.celeryconf:app
      - worker
      - --loglevel=info
      - --beat
