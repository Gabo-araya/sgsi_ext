- name: restore DB dump
  hosts: all
  gather_facts: no
  tasks:

    - name: stop services
      # Django should be stopped to prevent 'ERROR:  database "..." is being accessed by other users'.
      # This applies to gunicorn and celery containers.
      #
      # Also stop nginx to prevent this failure:
      # - gunicorn container starts with ip 172.29.0.3
      # - celery   container starts with ip 172.29.0.4
      # - nginx container starts, and it resolves the "django" hostname to 172.29.0.3
      # - Then gunicorn and celery container are stopped (to run pg_restore)
      # - Then they are started again, but with swapped ips (gunicorn at 172.29.0.4, celery at 172.29.0.3)
      # - nginx tries to upstream requests to 172.29.0.3:8000, which fail
      # - The site is down with "502 Bad Gateway" until nginx is restarted so it upstreams requests to 172.29.0.4:8000
      command: docker compose stop django celery nginx
      args:
        chdir: "{{ project_name }}"
      changed_when: true  # Unfortunately "Stopping"/"Stopped" are always printed

    - name: drop and create database
      command: docker compose exec postgres sh -c 'psql -c "{{ cmd1 }}" -c "{{ cmd2 }}" postgres'
      args:
        chdir: "{{ project_name }}"
      vars:
        cmd1: drop database if exists \"$PGDATABASE\";
        cmd2: create database \"$PGDATABASE\";

    - name: restore dump
      command: docker compose exec postgres bash -c '{{ restore_cmd }}'
      args:
        chdir: "{{ project_name }}"
      vars:
        restore_cmd: >
          pg_restore
          --dbname="$PGDATABASE"
          --no-owner
          --no-acl
          --jobs="{{ jobs }}"
          "db_dumps/{{ dump_name | quote }}"

        # man says: "A good place to start is the number of CPU cores on the server"
        # but if server is remote, just assume 1.
        jobs: $( {{ host_is_remote_test }} && echo 1 || nproc )

        # From magnet-entrypoint.sh:
        host_is_remote_test: '[[ "$PGHOST" != "localhost" && "$PGHOST" != "postgres" ]]'

    - name: start services
      # The entrypoint will run migrations
      command: docker compose start django celery nginx
      args:
        chdir: "{{ project_name }}"
      changed_when: true
