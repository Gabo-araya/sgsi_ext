{
  "env": {
    "browser": true,
    "es2021": true
  },
  "extends": [
    "eslint:recommended",
    "plugin:import/recommended",
    "plugin:import/typescript",
    "plugin:react/recommended",
    "plugin:@typescript-eslint/recommended",
    "plugin:@typescript-eslint/recommended-requiring-type-checking",
    "airbnb",
    "airbnb-typescript"
  ],
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "ecmaFeatures": {
      "jsx": true
    },
    "ecmaVersion": 12,
    "sourceType": "module",
    "project": "./tsconfig.json"
  },
  "plugins": [
    "import",
    "react",
    "react-hooks",
    "@typescript-eslint",
    "deprecation"
  ],
  "rules": {
    "arrow-body-style": ["error", "as-needed"],
    "comma-dangle": ["error", "never"],
    "@typescript-eslint/comma-dangle": ["error", "never"],
    "function-paren-newline": "off",
    "lines-between-class-members": "off",
    // Deprecated, but still used in airbnb config, covered by func-call-spacing
    "no-spaced-func": "off",
    "@typescript-eslint/lines-between-class-members": "off",
    // Too restrictive, writing ugly code to defend against a very unlikely scenario: https://eslint.org/docs/rules/no-prototype-builtins
    "no-prototype-builtins": "off",
    // Default import is bad https://github.com/basarat/typescript-book/blob/master/docs/tips/defaultIsBad.md
    "import/prefer-default-export": "off",
    "import/no-default-export": "error",
    // Too restrictive: https://github.com/yannickcr/eslint-plugin-react/blob/master/docs/rules/destructuring-assignment.md
    "react/destructuring-assignment": "off",
    // Use function hoisting to improve code readability
    "no-use-before-define": [
      "error",
      { "functions": false, "classes": true, "variables": true }
    ],
    // Allow most functions to rely on type inference. If the function is exported, then `@typescript-eslint/explicit-module-boundary-types` will ensure it's typed.
    "@typescript-eslint/explicit-function-return-type": "off",
    "@typescript-eslint/no-use-before-define": [
      "error",
      { "functions": false, "classes": true, "variables": true , "typedefs": true }
    ],
    "deprecation/deprecation": "warn"
  }
}
