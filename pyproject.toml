[tool.poetry]
name = "django3-project-template"
version = "0.1.0"
description = "The project template for Django 3.2. This project aims to provide a common starting point for Magnet projects."
authors = ["Magnet DPT3 Team <d3pt@magnet.cl>"]
license = "MIT"

[tool.poetry.dependencies]
python = "~3.9.9"
django = "~3.2.13"
psycopg2 = "~2.9.3"
django-storages = "~1.12.3"
ipython = "~8.2.0"
gunicorn = "~20.1.0"
pytz = ">=2021.3"
django-debug-toolbar = "3.2.4"
pypugjs = "5.9.11"
ipdb = "~0.13.9"
django-loginas = "0.3.10"
djangorestframework = "~3.13.1"
djangorestframework-camel-case = "~1.3.0"
django-extensions = "~3.1.4"
boto3 = "1.22.0"
inflection = "0.5.1"
pymemcache = "3.5.2"
django-webpack-loader = "^1.4.1"
ansible-core = { version = "~2.12", optional = true }
yq = { version = "~2.14.0", optional = true }

[tool.poetry.dev-dependencies]
pytest = "~7.1.1"
pytest-cov = "^3.0.0"
pytest-django = "^4.5.2"
black = "~22.3.0"
flake8 = "4.0.1"
isort = "~5.10.1"
pre-commit = "^2.17.0"
# Lock Werkzeug until django-extensions fixes their integration.
Werkzeug = "2.0.1"
watchdog = "^2.1.7"

[tool.poetry.extras]
ansible = ["ansible-core", "yq"]

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.isort]
ensure_newline_before_comments = true
extend_skip = ["migrations", "manage.py"]
filter_files = true
force_single_line = true
group_by_package = true
import_heading_django = "django"
import_heading_stdlib = "standard library"
import_heading_thirdparty = "others libraries"
known_django = "django"
lines_between_types = 1
sections = ["FUTURE", "STDLIB", "DJANGO", "THIRDPARTY", "FIRSTPARTY", "LOCALFOLDER"]

[tool.pytest.ini_options]
required_plugins = "pytest-django"
DJANGO_SETTINGS_MODULE = "project.test_settings"
addopts = [
  "-v",
  "--tb=native",
  "--junit-xml=test-results/pytest.xml"
]
python_files = [
  "tests.py",
  "test_*.py",
  "*_tests.py"
]
junit_family = "xunit2"
