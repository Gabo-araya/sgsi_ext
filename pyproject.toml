[tool.poetry]
name = "project-name-placeholder"
version = "0.1.0"
description = "The project template for Django 3.2. This project aims to provide a common starting point for Magnet projects."
authors = ["Magnet DPT3 Team <d3pt@magnet.cl>"]
license = "MIT"

[tool.poetry.dependencies]
python = "~3.9.9"
# semver packages
django = "~3.2.13"
psycopg2 = "2.9.4"
celery = { version = "~5.2", extras = ["redis"] }
gunicorn = "~20.1.0"
django-celery-beat = "~2.4.0"
django-loginas = "0.3.10"
djangorestframework = "3.14.0"
boto3 = "1.26.54"
ipdb = "0.13.11"
ipython = "8.8.0"
ansible-core = { version = "2.13", optional = true }
yq = { version = "2.14.0", optional = true }
Faker = "14.2.0"
# non-semver packages (or no information found)
django-debug-toolbar = "3.8.1"
django-extensions = "3.2.1"
python-json-logger = "==2.0.4"
django-storages = "1.13.2"
django-webpack-loader = "1.8.0"
django-redis = "5.2.0"
djangorestframework-camel-case = "1.3.0"
inflection = "0.5.1"
pypugjs = "5.9.12"
# calver packages that must be updated always
pytz = ">=2022.2"

[tool.poetry.dev-dependencies]
# semver packages
pytest = "7.2.1"
pytest-celery = "^0.0.0"
pytest-cov = "4.0.0"
pytest-django = "4.5.2"
flake8 = "6.0.0"
isort = "5.11.4"
pre-commit = "2.21.0"
watchdog = "2.2.1"
Werkzeug = "2.2.3"
# calver packages
black = "22.12.0"

[tool.poetry.extras]
ansible = ["ansible-core", "yq"]

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.isort]
ensure_newline_before_comments = true
extend_skip = ["migrations", "manage.py"]
filter_files = true
force_single_line = true
group_by_package = true
import_heading_django = "django"
import_heading_stdlib = "standard library"
import_heading_thirdparty = "others libraries"
known_django = "django"
lines_between_types = 1
sections = ["FUTURE", "STDLIB", "DJANGO", "THIRDPARTY", "FIRSTPARTY", "LOCALFOLDER"]
line_length = 88
profile = "black"

[tool.pytest.ini_options]
required_plugins = "pytest-django"
DJANGO_SETTINGS_MODULE = "project.test_settings"
addopts = [
  "-v",
  "--tb=native",
  "--junit-xml=test-results/pytest.xml"
]
python_files = [
  "tests.py",
  "test_*.py",
  "*_tests.py"
]
junit_family = "xunit2"

[tool.coverage.run]
omit = [
  "*/management/*",
  "*/migrations/*",
  "*/test/*",
  "*/tests.py"
]
