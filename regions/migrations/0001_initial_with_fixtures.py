# Generated by Django 3.2.11 on 2022-03-10 19:51

import json

from django.db import migrations, models
import django.db.models.deletion


def load_fixtures(apps, schema_editor):
    # get historical version of models
    Region = apps.get_model("regions", "Region")
    Commune = apps.get_model("regions", "Commune")

    # iterate fixtures to create objects
    with open("regions/fixtures/initial_data.json", "r") as f:
        fixtures = json.loads(f.read())

        for fixture in fixtures:
            if fixture["model"] == "regions.region":
                Region.objects.create(
                    pk=fixture["pk"],
                    created_at=fixture["fields"]["created_at"],
                    updated_at=fixture["fields"]["updated_at"],
                    short_name=fixture["fields"]["short_name"],
                    name=fixture["fields"]["name"],
                    order=fixture["fields"]["order"],
                    importance=fixture["fields"]["importance"],
                )

            elif fixture["model"] == "regions.commune":
                Commune.objects.create(
                    pk=fixture["pk"],
                    region_id=fixture["fields"]["region"],
                    created_at=fixture["fields"]["created_at"],
                    updated_at=fixture["fields"]["updated_at"],
                    name=fixture["fields"]["name"],
                )


UPDATE_SEQUENCE_SQL = r"SELECT setval(pg_get_serial_sequence('{}', 'id'), (SELECT id from {} ORDER BY id DESC LIMIT 1))"


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Region",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True,
                        help_text="creation date",
                        verbose_name="created at",
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True,
                        help_text="edition date",
                        null=True,
                        verbose_name="updated at",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="The name of the region",
                        max_length=100,
                        unique=True,
                        verbose_name="name",
                    ),
                ),
                (
                    "short_name",
                    models.CharField(
                        blank=True,
                        help_text="A short name of the region",
                        max_length=100,
                        null=True,
                        unique=True,
                        verbose_name="short name",
                    ),
                ),
                ("order", models.PositiveIntegerField(blank=True, null=True)),
                ("importance", models.PositiveIntegerField(blank=True, null=True)),
            ],
            options={
                "verbose_name_plural": "regions",
                "verbose_name": "region",
                "ordering": ["order"],
            },
        ),
        migrations.CreateModel(
            name="Commune",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True,
                        help_text="creation date",
                        verbose_name="created at",
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True,
                        help_text="edition date",
                        null=True,
                        verbose_name="updated at",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="The name of the commune",
                        max_length=100,
                        unique=True,
                        verbose_name="name",
                    ),
                ),
                (
                    "region",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="regions.region"
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "communes",
                "verbose_name": "commune",
                "ordering": ["name"],
            },
        ),
        migrations.RunPython(
            code=load_fixtures, reverse_code=migrations.RunPython.noop
        ),
        migrations.RunSQL(
            sql=(
                UPDATE_SEQUENCE_SQL.format("regions_region", "regions_region"),
                UPDATE_SEQUENCE_SQL.format("regions_commune", "regions_commune"),
            ),
            reverse_sql=migrations.RunSQL.noop,
        ),
    ]
